// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL") //database connector 
}

//schema

model User {
  id            String         @id @default(uuid())
  username      String         @unique
  passwordHash  String
  userAuthToken String         @unique
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  role          Roles          @relation(fields: [roleId], references: [id])
  roleId        Int
  favorites     Fav[]          @relation("UserFavorites")
  bookCategory  BookCategory[] @relation("UserBookCategory")
  Book          Book[]         @relation("UserBook")
  activity      activity[]
  avatar        String?
  reviews       reviews[]
}

model BookCategory {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  User     User[]     @relation("UserBookCategory")
  Book     Book[]     @relation("BookCategory")
  activity activity[]
}

model Roles {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Fav {
  id     String @id @default(uuid())
  bookId String @unique
  covers Int
  User   User[] @relation("UserFavorites")
}

model Book {
  id       String  @id @default(uuid())
  UserId   String?
  bookId   String?
  title    String?
  pages    String?
  chapters String?
  rating   String?
  rereads  String?
  notes    String?
  tPages   String?
  covers   Int?

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  completedAt DateTime?

  bookCategory BookCategory[] @relation("BookCategory")
  User         User[]         @relation("UserBook")
}

model activity {
  id         String        @id @default(uuid())
  bookId     String?
  timestamp  DateTime      @default(now())
  pages      String?
  rating     String?
  title      String?
  tPages     String?
  covers     Int?
  user       User?         @relation(fields: [userId], references: [id])
  userId     String?
  category   BookCategory? @relation(fields: [categoryId], references: [id])
  categoryId Int?

  @@index([bookId])
}

model reviews {
  id             String   @id @default(uuid())
  bookId         String
  date           DateTime @updatedAt
  review         String
  recommendation String
  spoiler        String
  user           User?    @relation(fields: [userId], references: [id])
  userId         String?
}

// Use enums when yosu change database
// because SQLite doesn't support it
// https://www.prisma.io/docs/reference/database-reference/database-features#misc

// model User {
//   role Role @default(USER)
// }

// enum Role {
//   USER
//   ADMIN
// }
